
@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using MyShop_Site.Services
@inject IAuthenticationService AuthService
@inject NavigationManager Navigation

<PageTitle>Login - MyShop</PageTitle>

<div class="container-fluid vh-100">
    <div class="row h-100">
        <div class="col-lg-6 d-flex align-items-center justify-content-center btn-primarySeconed ">
            <div class="text-center text-white">
                <h1 class="display-4 fw-bold mb-4">Welcome Back!</h1>
                <p class="lead">Sign in to access your MyShop account</p>
            </div>
        </div>
        <div class="col-lg-6 d-flex align-items-center justify-content-center">

            <div class="card shadow-lg border-0" style="width: 100%; max-width: 400px;">
                <div class="card-body p-5">
                    <h3 class="text-center mb-4">Sign In</h3>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @errorMessage
                        </div>
                    }

                    <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label class="form-label">Username or Email</label>
                            <InputText @bind-Value="loginModel.Username" class="form-control" placeholder="Enter username or email" />
                            <ValidationMessage For="() => loginModel.Username" class="text-danger" />
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Password</label>
                            <div class="input-group">
                                <InputText type="@(showPassword ? "text" : "password")" @bind-Value="loginModel.Password" class="form-control" placeholder="Enter password" />
                                <button type="button" class="btn btn-outline-secondary" @onclick="TogglePasswordVisibility">
                                    <i class="fas @(showPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                </button>
                            </div>
                            <ValidationMessage For="() => loginModel.Password" class="text-danger" />
                        </div>

                        <button type="submit" class="btn btn-primary w-100 mb-3" disabled="@isLoading">
                            @if (isLoading)
                            {
                                <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                            }
                            Sign In
                        </button>
                    </EditForm>

                    <div class="text-center">
                        <p class="mb-0">Don't have an account? <a href="/register" class="text-decoration-none">Sign up here</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private MyShop_Site.Models.Common.LoginRequestModel loginModel = new ();
    private string errorMessage = string.Empty;
    private bool showPassword = false;
    private bool isLoading = false;

    private async Task HandleLogin()
    {
        isLoading = true;
        errorMessage = string.Empty;

        try
        {
            var result = await AuthService.AuthenticateAsync(loginModel.Username, loginModel.Password, false);
            if (result.IsSuccess)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                errorMessage = result.Message ?? "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred while signing in. Please try again.";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }


}
